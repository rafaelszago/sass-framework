@use 'sass:map' as *;
@use 'sass:math' as *;

$colors: (
  'red': #f44336,
  'pink': #e91e63,
  'purple': #9c27b0,
  'deep-purple': #673ab7,
  'indigo': #3f51b5,
  'blue': #2196f3,
  'light-blue': #03a9f4,
  'cyan': #00bcd4,
  'teal': #009688,
  'green': #4caf50,
  'light-green': #8bc34a,
  'lime': #cddc39,
  'yellow': #ffeb3b,
  'amber': #ffc107,
  'orange': #ff9800,
  'deep-orange': #ff5722,
  'brown': #795548,
  'gray': #9e9e9e,
  'blue-gray': #7f8fac
);

@function color-shade($color, $shade) {
  @if ($shade > 500) {
    $value: div($shade, 100) * 3;
    @return darken($color, $value);
  } @else if ($shade < 500) {
    $value: div(1000-$shade, 100) * 4;
    @return lighten($color, $value);
  } @else {
    @return $color;
  }
}

@function get-color($color, $shade: 500) {
  @return color-shade(map-get($colors, $color), $shade);
}

@function make-color-shades($shades) {
  $color-shades: ();

  @each $name, $color in $colors {
    $value: (#{$name}: $color);
    $color-shades: merge($color-shades, $value);

    @each $shade in $shades {
      $value: (#{$name}-#{$shade}: color-shade($color, $shade));
      $color-shades: merge($color-shades, $value);
    }
  }

  @return $color-shades;
}
